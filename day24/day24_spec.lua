local day24 = require("day24")
local List = require("pl.List")

describe("day24", function()
	describe("parse_line", function()
		it("esenee: move one tile east, one tile southeast, one tile northeast, and one tile east", function()
			local directions = day24.parse_line("esenee")
			assert.are.equal(List({ "e", "se", "ne", "e" }), directions)
		end)
		it("should parse nwwswee", function()
			local directions = day24.parse_line("nwwswee")
			assert.are.equal(List({ "nw", "w", "sw", "e", "e" }), directions)
		end)
	end)

	describe("calc_coords", function()
		it("nwwswee flips the reference tile itself", function()
			local x, y = day24.calc_coords(List({ "nw", "w", "sw", "e", "e" }))
			assert.are.equal(0, x)
			assert.are.equal(0, y)
		end)
	end)

	describe("Part 1", function()
		it("should work for the small input", function()
			assert.are.equal(10, day24.part1("small.txt"))
		end)

		it("should work for the regular input", function()
			assert.are.equal(469, day24.part1("input.txt"))
		end)
	end)

	describe("Part 2", function()
		it("should work for the small input", function()
			assert.are.equal(2208, day24.part2("small.txt"))
		end)

		it("should work for the regular input", function()
			assert.are.equal(4353, day24.part2("input.txt"))
		end)
	end)
end)
